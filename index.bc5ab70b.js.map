{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n        this.status = \"idle\"; // 'idle', 'playing', 'win', 'lose'\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.addRandomTile();\n                    this.addRandomTile();\n                    this.render();\n                    var button = document.querySelector(\".button\");\n                    if (button) button.textContent = \"Restart\";\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.hideMessage();\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"idle\";\n                var scoreElement = document.querySelector(\".game-score\");\n                if (scoreElement) scoreElement.textContent = this.score;\n                this.render();\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var totalPoints = 0;\n                var boardChanged = false;\n                // Этап 1: Сдвиг плиток\n                for(var r = 0; r < 4; r++){\n                    var _this_slideAndMerge = this.slideAndMerge(this.board[r]), newRow = _this_slideAndMerge.newRow, points = _this_slideAndMerge.points, changed = _this_slideAndMerge.changed;\n                    if (changed) {\n                        this.board[r] = newRow;\n                        totalPoints += points;\n                        boardChanged = true;\n                    }\n                }\n                // Если произошли изменения (сдвиг или объединение), добавляем новую плитку\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.render();\n                    this.updateScore(totalPoints);\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var totalPoints = 0;\n                var boardChanged = false;\n                // Этап 1: Сдвиг плиток\n                for(var r = 0; r < 4; r++){\n                    var reversedRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.board[r]).reverse();\n                    var _this_slideAndMerge = this.slideAndMerge(reversedRow), newRow = _this_slideAndMerge.newRow, points = _this_slideAndMerge.points, changed = _this_slideAndMerge.changed;\n                    if (changed) {\n                        this.board[r] = newRow.reverse();\n                        totalPoints += points;\n                        boardChanged = true;\n                    }\n                }\n                // Если произошли изменения (сдвиг или объединение), добавляем новую плитку\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.render();\n                    this.updateScore(totalPoints);\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status !== \"playing\") return;\n                var totalPoints = 0;\n                var boardChanged = false;\n                // Этап 1: Сдвиг плиток\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    // Собираем все плитки в колонке, исключая нули\n                    for(var row = 0; row < 4; row++)column.push(this.board[row][col]);\n                    // Применяем метод slideAndMerge для этой колонки\n                    var _this_slideAndMerge = this.slideAndMerge(column), newRow = _this_slideAndMerge.newRow, points = _this_slideAndMerge.points, changed = _this_slideAndMerge.changed;\n                    // Если произошло изменение (сдвиг или объединение), обновляем колонку\n                    if (changed) {\n                        totalPoints += points;\n                        boardChanged = true;\n                        for(var row1 = 0; row1 < 4; row1++)this.board[row1][col] = newRow[row1];\n                    }\n                }\n                // Если произошли изменения, добавляем новую плитку\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.render();\n                    this.updateScore(totalPoints);\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status !== \"playing\") return;\n                var totalPoints = 0;\n                var boardChanged = false;\n                // Этап 1: Сдвиг плиток\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    // Собираем все плитки в колонке (перевернутый порядок)\n                    for(var row = 3; row >= 0; row--)column.push(this.board[row][col]);\n                    // Применяем метод slideAndMerge для этой колонки\n                    var _this_slideAndMerge = this.slideAndMerge(column), newRow = _this_slideAndMerge.newRow, points = _this_slideAndMerge.points, changed = _this_slideAndMerge.changed;\n                    if (changed) {\n                        totalPoints += points;\n                        boardChanged = true;\n                        for(var row1 = 0; row1 < 4; row1++)this.board[3 - row1][col] = newRow[row1];\n                    }\n                }\n                // Если произошли изменения, добавляем новую плитку\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.render();\n                    this.updateScore(totalPoints);\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"updateScore\",\n            value: function updateScore(points) {\n                this.score += points;\n                var scoreElement = document.querySelector(\".game-score\");\n                if (scoreElement) scoreElement.textContent = this.score;\n            }\n        },\n        {\n            key: \"transposeBoard\",\n            value: function transposeBoard() {\n                var newBoard = [];\n                for(var col = 0; col < this.board[0].length; col++){\n                    var newRow = [];\n                    for(var row = 0; row < this.board.length; row++)newRow.push(this.board[row][col]);\n                    newBoard.push(newRow);\n                }\n                this.board = newBoard;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptCells = [];\n                for(var r = 0; r < 4; r++){\n                    for(var c = 0; c < 4; c++)if (this.board[r][c] === 0) emptCells.push([\n                        r,\n                        c\n                    ]);\n                }\n                if (emptCells.length === 0) return;\n                var _emptCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptCells[Math.floor(Math.random() * emptCells.length)], 2), row = _emptCells_Math_floor[0], col = _emptCells_Math_floor[1];\n                this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n                if (this.board.flat().includes(2048)) {\n                    this.status = \"win\";\n                    this.showMessage(\"You won!\");\n                }\n                this.checkGameOver();\n            }\n        },\n        {\n            key: \"slideAndMerge\",\n            value: function slideAndMerge(row) {\n                var newRow = row.filter(function(val) {\n                    return val !== 0;\n                });\n                var points = 0;\n                var changed = false; // Флаг для отслеживания изменений\n                for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                    newRow[i] *= 2;\n                    points += newRow[i];\n                    newRow.splice(i + 1, 1);\n                    changed = true; // Объединение плиток считается изменением\n                }\n                while(newRow.length < 4)newRow.push(0);\n                if (newRow.join(\"\") !== row.join(\"\")) changed = true;\n                return {\n                    newRow: newRow,\n                    points: points,\n                    changed: changed\n                };\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                for(var r = 0; r < 4; r++)for(var c = 0; c < 4; c++){\n                    if (this.board[r][c] === 0) return false;\n                    if (c < 3 && this.board[r][c] === this.board[r][c + 1] || r < 3 && this.board[r][c] === this.board[r + 1][c]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (this.isGameOver() === true) {\n                    this.status = \"lose\";\n                    this.showMessage(\"Game Over!\");\n                }\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var cells = document.querySelectorAll(\".field-cell\");\n                var index = 0;\n                for(var r = 0; r < 4; r++)for(var c = 0; c < 4; c++){\n                    var cell = cells[index];\n                    var value = this.board[r][c];\n                    if (cell) {\n                        cell.innerHTML = value || \"\";\n                        cell.className = \"field-cell \".concat(value ? \"field-cell--\".concat(value) : \"\");\n                        index++;\n                    }\n                }\n            }\n        },\n        {\n            key: \"showMessage\",\n            value: function showMessage(message) {\n                var messageElement = document.querySelector(\".game-message\");\n                if (messageElement) {\n                    messageElement.textContent = message;\n                    messageElement.style.display = \"block\";\n                }\n            }\n        },\n        {\n            key: \"hideMessage\",\n            value: function hideMessage() {\n                var messageElement = document.querySelector(\".game-message\");\n                if (messageElement) messageElement.style.display = \"none\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$messageContainer = document.querySelector(\".message-container\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nfunction $197cd56b15c33885$var$showMessage(messageType) {\n    $197cd56b15c33885$var$messageContainer.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    if (messageType === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    else if (messageType === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    else if (messageType === \"start\") $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.status === \"idle\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$showMessage(\"start\");\n        // Изменение класса и текста кнопки\n        $197cd56b15c33885$var$button.classList.remove(\"start\"); // Удаляем старый класс (если был)\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$messageStart.textContent = 'Press \"Restart\" to start the new Game';\n    } else {\n        var confirmRestart = confirm(\"\\u0425\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0438\\u0433\\u0440\\u0443?\");\n        if (confirmRestart) {\n            $197cd56b15c33885$var$game.restart();\n            $197cd56b15c33885$var$game.start();\n            $197cd56b15c33885$var$showMessage(\"start\");\n            $197cd56b15c33885$var$button.textContent = \"Restart\";\n        }\n    }\n});\ndocument.addEventListener(\"keydown\", function(ev) {\n    if ($197cd56b15c33885$var$game.status === \"playing\") switch(ev.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            break;\n    }\n    if ($197cd56b15c33885$var$game.isGameOver()) $197cd56b15c33885$var$showMessage(\"lose\");\n    else if ($197cd56b15c33885$var$game.status === \"win\") $197cd56b15c33885$var$showMessage(\"win\");\n}); // Write your code here\n\n})();\n//# sourceMappingURL=index.bc5ab70b.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.button');\n\nconst messageContainer = document.querySelector('.message-container');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nfunction showMessage(messageType) {\n  messageContainer.classList.remove('hidden');\n\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  if (messageType === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else if (messageType === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (messageType === 'start') {\n    messageStart.classList.remove('hidden');\n  }\n}\n\nbutton.addEventListener('click', () => {\n  if (game.status === 'idle') {\n    game.start();\n    showMessage('start');\n\n    // Изменение класса и текста кнопки\n    button.classList.remove('start'); // Удаляем старый класс (если был)\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n    messageStart.textContent = 'Press \"Restart\" to start the new Game';\n  } else {\n    const confirmRestart = confirm('Хотите начать новую игру?');\n\n    if (confirmRestart) {\n      game.restart();\n      game.start();\n      showMessage('start');\n      button.textContent = 'Restart';\n    }\n  }\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  if (game.status === 'playing') {\n    switch (ev.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (game.isGameOver()) {\n    showMessage('lose');\n  } else if (game.status === 'win') {\n    showMessage('win');\n  }\n});\n\n// Write your code here\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle'; // 'idle', 'playing', 'win', 'lose'\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      this.addRandomTile();\n      this.addRandomTile();\n      this.render();\n\n      const button = document.querySelector('.button');\n\n      if (button) {\n        button.textContent = 'Restart';\n      }\n    }\n  }\n\n  restart() {\n    this.hideMessage();\n\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'idle';\n\n    const scoreElement = document.querySelector('.game-score');\n\n    if (scoreElement) {\n      scoreElement.textContent = this.score;\n    }\n\n    this.render();\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let totalPoints = 0;\n    let boardChanged = false;\n\n    // Этап 1: Сдвиг плиток\n    for (let r = 0; r < 4; r++) {\n      const { newRow, points, changed } = this.slideAndMerge(this.board[r]);\n\n      if (changed) {\n        this.board[r] = newRow;\n        totalPoints += points;\n        boardChanged = true;\n      }\n    }\n\n    // Если произошли изменения (сдвиг или объединение), добавляем новую плитку\n    if (boardChanged) {\n      this.addRandomTile();\n      this.render();\n      this.updateScore(totalPoints);\n      this.checkGameOver();\n    }\n  }\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let totalPoints = 0;\n    let boardChanged = false;\n\n    // Этап 1: Сдвиг плиток\n    for (let r = 0; r < 4; r++) {\n      const reversedRow = [...this.board[r]].reverse();\n      const { newRow, points, changed } = this.slideAndMerge(reversedRow);\n\n      if (changed) {\n        this.board[r] = newRow.reverse();\n        totalPoints += points;\n        boardChanged = true;\n      }\n    }\n\n    // Если произошли изменения (сдвиг или объединение), добавляем новую плитку\n    if (boardChanged) {\n      this.addRandomTile();\n      this.render();\n      this.updateScore(totalPoints);\n      this.checkGameOver();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let totalPoints = 0;\n    let boardChanged = false;\n\n    // Этап 1: Сдвиг плиток\n    for (let col = 0; col < 4; col++) {\n      const column = [];\n\n      // Собираем все плитки в колонке, исключая нули\n      for (let row = 0; row < 4; row++) {\n        column.push(this.board[row][col]);\n      }\n\n      // Применяем метод slideAndMerge для этой колонки\n      const { newRow, points, changed } = this.slideAndMerge(column);\n\n      // Если произошло изменение (сдвиг или объединение), обновляем колонку\n      if (changed) {\n        totalPoints += points;\n        boardChanged = true;\n\n        for (let row = 0; row < 4; row++) {\n          this.board[row][col] = newRow[row];\n        }\n      }\n    }\n\n    // Если произошли изменения, добавляем новую плитку\n    if (boardChanged) {\n      this.addRandomTile();\n      this.render();\n      this.updateScore(totalPoints);\n      this.checkGameOver();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let totalPoints = 0;\n    let boardChanged = false;\n\n    // Этап 1: Сдвиг плиток\n    for (let col = 0; col < 4; col++) {\n      const column = [];\n\n      // Собираем все плитки в колонке (перевернутый порядок)\n      for (let row = 3; row >= 0; row--) {\n        column.push(this.board[row][col]);\n      }\n\n      // Применяем метод slideAndMerge для этой колонки\n      const { newRow, points, changed } = this.slideAndMerge(column);\n\n      if (changed) {\n        totalPoints += points;\n        boardChanged = true;\n\n        for (let row = 0; row < 4; row++) {\n          this.board[3 - row][col] = newRow[row];\n        }\n      }\n    }\n\n    // Если произошли изменения, добавляем новую плитку\n    if (boardChanged) {\n      this.addRandomTile();\n      this.render();\n      this.updateScore(totalPoints);\n      this.checkGameOver();\n    }\n  }\n\n  updateScore(points) {\n    this.score += points;\n\n    const scoreElement = document.querySelector('.game-score');\n\n    if (scoreElement) {\n      scoreElement.textContent = this.score;\n    }\n  }\n\n  transposeBoard() {\n    const newBoard = [];\n\n    for (let col = 0; col < this.board[0].length; col++) {\n      const newRow = [];\n\n      for (let row = 0; row < this.board.length; row++) {\n        newRow.push(this.board[row][col]);\n      }\n      newBoard.push(newRow);\n    }\n    this.board = newBoard;\n  }\n\n  addRandomTile() {\n    const emptCells = [];\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (this.board[r][c] === 0) {\n          emptCells.push([r, c]);\n        }\n      }\n    }\n\n    if (emptCells.length === 0) {\n      return;\n    }\n\n    const [row, col] = emptCells[Math.floor(Math.random() * emptCells.length)];\n\n    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n      this.showMessage('You won!');\n    }\n    this.checkGameOver();\n  }\n\n  slideAndMerge(row) {\n    const newRow = row.filter((val) => val !== 0);\n    let points = 0;\n    let changed = false; // Флаг для отслеживания изменений\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        points += newRow[i];\n        newRow.splice(i + 1, 1);\n        changed = true; // Объединение плиток считается изменением\n      }\n    }\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    if (newRow.join('') !== row.join('')) {\n      changed = true;\n    }\n\n    return { newRow, points, changed };\n  }\n\n  isGameOver() {\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (this.board[r][c] === 0) {\n          return false;\n        }\n\n        if (\n          (c < 3 && this.board[r][c] === this.board[r][c + 1]) ||\n          (r < 3 && this.board[r][c] === this.board[r + 1][c])\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  checkGameOver() {\n    if (this.isGameOver() === true) {\n      this.status = 'lose';\n      this.showMessage('Game Over!');\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  render() {\n    const cells = document.querySelectorAll('.field-cell');\n    let index = 0;\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        const cell = cells[index];\n        const value = this.board[r][c];\n\n        if (cell) {\n          cell.innerHTML = value || '';\n          cell.className = `field-cell ${value ? `field-cell--${value}` : ''}`;\n          index++;\n        }\n      }\n    }\n  }\n\n  showMessage(message) {\n    const messageElement = document.querySelector('.game-message');\n\n    if (messageElement) {\n      messageElement.textContent = message;\n      messageElement.style.display = 'block';\n    }\n  }\n\n  hideMessage() {\n    const messageElement = document.querySelector('.game-message');\n\n    if (messageElement) {\n      messageElement.style.display = 'none';\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","TypeError","board","score","status","key","value","addRandomTile","render","button","document","querySelector","textContent","hideMessage","scoreElement","totalPoints","boardChanged","r","_this_slideAndMerge","slideAndMerge","newRow","points","changed","updateScore","checkGameOver","reversedRow","isArray","iter","Symbol","iterator","reverse","col","column","row","push","row1","newBoard","emptCells","c","_emptCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","flat","includes","showMessage","filter","val","splice","join","isGameOver","cells","querySelectorAll","index","cell","innerHTML","className","concat","message","messageElement","style","display","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$button","$197cd56b15c33885$var$messageContainer","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$showMessage","messageType","classList","remove","add","addEventListener","start","confirm","restart","ev","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.bc5ab70b.js.map"}